diff --git a/inst/include/boost/asio/detail/push_options.hpp b/inst/include/boost/asio/detail/push_options.hpp
index 679ac273..affa3b47 100644
--- a/inst/include/boost/asio/detail/push_options.hpp
+++ b/inst/include/boost/asio/detail/push_options.hpp
@@ -79,7 +79,7 @@
 
 # if (__GNUC__ >= 7)
 #  pragma GCC diagnostic push
-#  pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
+//#  pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
 # endif // (__GNUC__ >= 7)
 
 #elif defined(__KCC)
diff --git a/inst/include/boost/atomic/detail/extra_fp_ops_generic.hpp b/inst/include/boost/atomic/detail/extra_fp_ops_generic.hpp
index 34902c47..922dd098 100644
--- a/inst/include/boost/atomic/detail/extra_fp_ops_generic.hpp
+++ b/inst/include/boost/atomic/detail/extra_fp_ops_generic.hpp
@@ -30,7 +30,7 @@
 #if defined(BOOST_GCC) && (BOOST_GCC+0) >= 60000
 #pragma GCC diagnostic push
 // ignoring attributes on template argument X - this warning is because we need to pass storage_type as a template argument; no problem in this case
-#pragma GCC diagnostic ignored "-Wignored-attributes"
+//#pragma GCC diagnostic ignored "-Wignored-attributes"
 #endif
 
 namespace boost {
diff --git a/inst/include/boost/bind.hpp b/inst/include/boost/bind.hpp
index 450120c7..ece94d3e 100644
--- a/inst/include/boost/bind.hpp
+++ b/inst/include/boost/bind.hpp
@@ -26,7 +26,7 @@
 #if defined(BOOST_CLANG)
 # pragma clang diagnostic push
 # if  __has_warning("-Wheader-hygiene")
-#  pragma clang diagnostic ignored "-Wheader-hygiene"
+//#  pragma clang diagnostic ignored "-Wheader-hygiene"
 # endif
 #endif
 
diff --git a/inst/include/boost/container/detail/copy_move_algo.hpp b/inst/include/boost/container/detail/copy_move_algo.hpp
index b71560d9..f915f534 100644
--- a/inst/include/boost/container/detail/copy_move_algo.hpp
+++ b/inst/include/boost/container/detail/copy_move_algo.hpp
@@ -40,14 +40,14 @@
 #pragma GCC diagnostic push
 //pair memcpy optimizations rightfully detected by GCC
 #  if defined(BOOST_GCC) && (BOOST_GCC >= 80000)
-#     pragma GCC diagnostic ignored "-Wclass-memaccess"
+//#     pragma GCC diagnostic ignored "-Wclass-memaccess"
 #  endif
 //GCC 8 seems a bit confused about array access error with static_vector
 //when out of bound exceptions are being thrown.
 #  if defined(BOOST_GCC) && (BOOST_GCC >= 80000) && (BOOST_GCC < 80200)
-#     pragma GCC diagnostic ignored "-Wstringop-overflow"
+//#     pragma GCC diagnostic ignored "-Wstringop-overflow"
 #  endif
-#  pragma GCC diagnostic ignored "-Warray-bounds"
+//#  pragma GCC diagnostic ignored "-Warray-bounds"
 #endif
 
 namespace boost {
diff --git a/inst/include/boost/container/detail/tree.hpp b/inst/include/boost/container/detail/tree.hpp
index 23fbfded..3683ba12 100644
--- a/inst/include/boost/container/detail/tree.hpp
+++ b/inst/include/boost/container/detail/tree.hpp
@@ -140,7 +140,7 @@ struct tree_node
 
    #if defined(BOOST_GCC) && (BOOST_GCC >= 40600) && (BOOST_GCC < 80000)
       #pragma GCC diagnostic push
-      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
+  //      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
       #define BOOST_CONTAINER_DISABLE_ALIASING_WARNING
    #  endif
 
diff --git a/inst/include/boost/container/list.hpp b/inst/include/boost/container/list.hpp
index f9ff663c..c29ce9e9 100644
--- a/inst/include/boost/container/list.hpp
+++ b/inst/include/boost/container/list.hpp
@@ -81,7 +81,7 @@ struct list_node
 
    #if defined(BOOST_GCC) && (BOOST_GCC >= 40600) && (BOOST_GCC < 80000)
       #pragma GCC diagnostic push
-      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
+  //      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
       #define BOOST_CONTAINER_DISABLE_ALIASING_WARNING
    #  endif
 
diff --git a/inst/include/boost/container/slist.hpp b/inst/include/boost/container/slist.hpp
index d10cf574..aa029fa2 100644
--- a/inst/include/boost/container/slist.hpp
+++ b/inst/include/boost/container/slist.hpp
@@ -86,7 +86,7 @@ struct slist_node
 
    #if defined(BOOST_GCC) && (BOOST_GCC >= 40600) && (BOOST_GCC < 80000)
       #pragma GCC diagnostic push
-      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
+  //      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
       #define BOOST_CONTAINER_DISABLE_ALIASING_WARNING
    #  endif
 
diff --git a/inst/include/boost/container/stable_vector.hpp b/inst/include/boost/container/stable_vector.hpp
index 7d0c9b39..6ced66a6 100644
--- a/inst/include/boost/container/stable_vector.hpp
+++ b/inst/include/boost/container/stable_vector.hpp
@@ -160,7 +160,7 @@ struct node
 
    #if defined(BOOST_GCC) && (BOOST_GCC >= 40600) && (BOOST_GCC < 80000)
       #pragma GCC diagnostic push
-      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
+  //      #pragma GCC diagnostic ignored "-Wstrict-aliasing"
       #define BOOST_CONTAINER_DISABLE_ALIASING_WARNING
    #  endif
 
diff --git a/inst/include/boost/container/string.hpp b/inst/include/boost/container/string.hpp
index 516b701a..1070081f 100644
--- a/inst/include/boost/container/string.hpp
+++ b/inst/include/boost/container/string.hpp
@@ -398,7 +398,7 @@ class basic_string_base
    //GCC seems a bit confused about uninitialized accesses
    #if defined(BOOST_GCC) && (BOOST_GCC >= 40700)
    #pragma GCC diagnostic push
-   #pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
+  //   #pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
    #endif
 
    pointer priv_long_addr() const
diff --git a/inst/include/boost/core/lightweight_test.hpp b/inst/include/boost/core/lightweight_test.hpp
index a87b7069..e930e035 100644
--- a/inst/include/boost/core/lightweight_test.hpp
+++ b/inst/include/boost/core/lightweight_test.hpp
@@ -113,14 +113,14 @@ inline void throw_failed_impl(char const * excep, char const * file, int line, c
 #if defined(__clang__) && defined(__has_warning)
 # if __has_warning("-Wsign-compare")
 #  pragma clang diagnostic push
-#  pragma clang diagnostic ignored "-Wsign-compare"
+  //#  pragma clang diagnostic ignored "-Wsign-compare"
 # endif
 #elif defined(_MSC_VER)
 # pragma warning(push)
 # pragma warning(disable: 4389)
 #elif defined(__GNUC__) && !(defined(__INTEL_COMPILER) || defined(__ICL) || defined(__ICC) || defined(__ECC)) && (__GNUC__ * 100 + __GNUC_MINOR__) >= 406
 # pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wsign-compare"
+  //# pragma GCC diagnostic ignored "-Wsign-compare"
 #endif
 
 // specialize test output for char pointers to avoid printing as cstring
diff --git a/inst/include/boost/function/function_base.hpp b/inst/include/boost/function/function_base.hpp
index bd0e548b..d63c848e 100644
--- a/inst/include/boost/function/function_base.hpp
+++ b/inst/include/boost/function/function_base.hpp
@@ -696,7 +696,7 @@ public: // should be protected, but GCC 2.95.3 will fail to allow access
 
 #if defined(BOOST_CLANG)
 #   pragma clang diagnostic push
-#   pragma clang diagnostic ignored "-Wweak-vtables"
+  //#   pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 /**
  * The bad_function_call exception class is thrown when a boost::function
diff --git a/inst/include/boost/get_pointer.hpp b/inst/include/boost/get_pointer.hpp
index 36e2cd7d..b8d82f07 100644
--- a/inst/include/boost/get_pointer.hpp
+++ b/inst/include/boost/get_pointer.hpp
@@ -41,7 +41,7 @@ template<class T> T * get_pointer(T * p)
 #if defined( BOOST_CORE_DETAIL_DISABLE_LIBSTDCXX_DEPRECATED_WARNINGS )
 // Disable libstdc++ warnings about std::auto_ptr being deprecated in C++11 mode
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+  //#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #define BOOST_CORE_DETAIL_DISABLED_DEPRECATED_WARNINGS
 #endif
 
diff --git a/inst/include/boost/interprocess/detail/config_begin.hpp b/inst/include/boost/interprocess/detail/config_begin.hpp
index d003ccd3..023954c4 100644
--- a/inst/include/boost/interprocess/detail/config_begin.hpp
+++ b/inst/include/boost/interprocess/detail/config_begin.hpp
@@ -46,5 +46,5 @@
 
 #if defined(BOOST_GCC) && (BOOST_GCC >= 40600)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
diff --git a/inst/include/boost/interprocess/detail/config_external_begin.hpp b/inst/include/boost/interprocess/detail/config_external_begin.hpp
index fb578ef0..1288c05d 100644
--- a/inst/include/boost/interprocess/detail/config_external_begin.hpp
+++ b/inst/include/boost/interprocess/detail/config_external_begin.hpp
@@ -14,5 +14,5 @@
 
 #if defined(__GNUC__) && ((__GNUC__*100 + __GNUC_MINOR__) >= 406)
 #  pragma GCC diagnostic push
-#  pragma GCC diagnostic ignored "-Wshadow"
+//#  pragma GCC diagnostic ignored "-Wshadow"
 #endif
diff --git a/inst/include/boost/interprocess/detail/win32_api.hpp b/inst/include/boost/interprocess/detail/win32_api.hpp
index 47617138..33be564a 100644
--- a/inst/include/boost/interprocess/detail/win32_api.hpp
+++ b/inst/include/boost/interprocess/detail/win32_api.hpp
@@ -105,17 +105,17 @@
 #  if (BOOST_GCC >= 40600)
 #     pragma GCC diagnostic push
 #     if (BOOST_GCC >= 40800)
-#        pragma GCC diagnostic ignored "-Wpedantic"
+//#        pragma GCC diagnostic ignored "-Wpedantic"
 #     else
-#        pragma GCC diagnostic ignored "-pedantic"
+//#        pragma GCC diagnostic ignored "-pedantic"
 #     endif
-#     pragma GCC diagnostic ignored "-Wnon-virtual-dtor"
+//#     pragma GCC diagnostic ignored "-Wnon-virtual-dtor"
 #  else
 #     pragma GCC system_header
 #  endif
 //When loading DLLs we have no option but reinterpret casting function types  
 #  if (BOOST_GCC >= 80000)
-#        pragma GCC diagnostic ignored "-Wcast-function-type"
+//#        pragma GCC diagnostic ignored "-Wcast-function-type"
 #  endif
 #endif
 
diff --git a/inst/include/boost/intrusive/pointer_plus_bits.hpp b/inst/include/boost/intrusive/pointer_plus_bits.hpp
index 2130f3c4..eed7f8e7 100644
--- a/inst/include/boost/intrusive/pointer_plus_bits.hpp
+++ b/inst/include/boost/intrusive/pointer_plus_bits.hpp
@@ -29,9 +29,9 @@
 #if defined(BOOST_GCC)
 #  if (BOOST_GCC >= 40600)
 #     pragma GCC diagnostic push
-#     pragma GCC diagnostic ignored "-Wuninitialized"
+//#     pragma GCC diagnostic ignored "-Wuninitialized"
 #     if (BOOST_GCC >= 40700)
-#        pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
+//#        pragma GCC diagnostic ignored "-Wmaybe-uninitialized"
 #     endif
 #  endif
 #endif
diff --git a/inst/include/boost/lexical_cast/try_lexical_convert.hpp b/inst/include/boost/lexical_cast/try_lexical_convert.hpp
index ac2e4f3c..eaae23ef 100644
--- a/inst/include/boost/lexical_cast/try_lexical_convert.hpp
+++ b/inst/include/boost/lexical_cast/try_lexical_convert.hpp
@@ -27,8 +27,8 @@
     !(defined(__INTEL_COMPILER) || defined(__ICL) || defined(__ICC) || defined(__ECC)) && \
     (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)))
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wuninitialized"
-#pragma GCC diagnostic ignored "-Wsign-conversion"
+//#pragma GCC diagnostic ignored "-Wuninitialized"
+//#pragma GCC diagnostic ignored "-Wsign-conversion"
 #endif
 
 
diff --git a/inst/include/boost/log/detail/header.hpp b/inst/include/boost/log/detail/header.hpp
index 95984ff4..3ad40c1d 100644
--- a/inst/include/boost/log/detail/header.hpp
+++ b/inst/include/boost/log/detail/header.hpp
@@ -50,15 +50,15 @@
 
 #pragma GCC diagnostic push
 // 'var' defined but not used
-#pragma GCC diagnostic ignored "-Wunused-variable"
+//#pragma GCC diagnostic ignored "-Wunused-variable"
 // unused parameter 'arg'
-#pragma GCC diagnostic ignored "-Wunused-parameter"
+//#pragma GCC diagnostic ignored "-Wunused-parameter"
 // missing initializer for member var
-#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
+//#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
 
 #if (__GNUC__ * 100 + __GNUC_MINOR__) >= 407
 // typedef 'foo' locally defined but not used
-#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
+//#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
 #endif
 
 #endif
diff --git a/inst/include/boost/move/detail/std_ns_begin.hpp b/inst/include/boost/move/detail/std_ns_begin.hpp
index a768e61a..cddec5ff 100644
--- a/inst/include/boost/move/detail/std_ns_begin.hpp
+++ b/inst/include/boost/move/detail/std_ns_begin.hpp
@@ -13,7 +13,7 @@
    #if defined(__clang__)
       #define BOOST_MOVE_STD_NS_GCC_DIAGNOSTIC_PUSH
       #pragma GCC diagnostic push
-      #pragma GCC diagnostic ignored "-Wc++11-extensions"
+//      #pragma GCC diagnostic ignored "-Wc++11-extensions"
    #endif
    #define BOOST_MOVE_STD_NS_BEG _LIBCPP_BEGIN_NAMESPACE_STD
    #define BOOST_MOVE_STD_NS_END _LIBCPP_END_NAMESPACE_STD
diff --git a/inst/include/boost/mp11/function.hpp b/inst/include/boost/mp11/function.hpp
index 8e1114a1..3e509e68 100644
--- a/inst/include/boost/mp11/function.hpp
+++ b/inst/include/boost/mp11/function.hpp
@@ -199,7 +199,7 @@ template<class... T> using mp_similar = typename detail::mp_similar_impl<T...>::
 
 #if BOOST_MP11_GCC
 # pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wsign-compare"
+  //# pragma GCC diagnostic ignored "-Wsign-compare"
 #endif
 
 // mp_less<T1, T2>
diff --git a/inst/include/boost/mpl/assert.hpp b/inst/include/boost/mpl/assert.hpp
index 7f220941..4cfbb993 100644
--- a/inst/include/boost/mpl/assert.hpp
+++ b/inst/include/boost/mpl/assert.hpp
@@ -187,7 +187,7 @@ template< typename P > struct assert_arg_pred_not
 #if defined(BOOST_GCC) && BOOST_GCC >= 80000
 #define BOOST_MPL_IGNORE_PARENTHESES_WARNING
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wparentheses"
+//#pragma GCC diagnostic ignored "-Wparentheses"
 #endif
 
 template< typename Pred >
diff --git a/inst/include/boost/mpl/print.hpp b/inst/include/boost/mpl/print.hpp
index 36e25cd3..430aa797 100644
--- a/inst/include/boost/mpl/print.hpp
+++ b/inst/include/boost/mpl/print.hpp
@@ -48,7 +48,7 @@ struct print
 {
 #if defined(__clang__)
 # pragma clang diagnostic push
-# pragma clang diagnostic ignored "-Wc++11-extensions"
+  //# pragma clang diagnostic ignored "-Wc++11-extensions"
     const int m_x = 1 / (sizeof(T) - sizeof(T));
 # pragma clang diagnostic pop
 #elif defined(BOOST_MSVC)
diff --git a/inst/include/boost/multi_array.hpp b/inst/include/boost/multi_array.hpp
index 5043eccb..fe0eaaaf 100644
--- a/inst/include/boost/multi_array.hpp
+++ b/inst/include/boost/multi_array.hpp
@@ -23,7 +23,7 @@
 
 #if defined(__GNUC__) && ((__GNUC__*100 + __GNUC_MINOR__) >= 406)
 #  pragma GCC diagnostic push
-#  pragma GCC diagnostic ignored "-Wshadow"
+//#  pragma GCC diagnostic ignored "-Wshadow"
 #endif
 
 #include "boost/multi_array/base.hpp"
diff --git a/inst/include/boost/multi_index/detail/ignore_wstrict_aliasing.hpp b/inst/include/boost/multi_index/detail/ignore_wstrict_aliasing.hpp
index ae398456..6524edc1 100644
--- a/inst/include/boost/multi_index/detail/ignore_wstrict_aliasing.hpp
+++ b/inst/include/boost/multi_index/detail/ignore_wstrict_aliasing.hpp
@@ -11,7 +11,7 @@
 #if defined(BOOST_GCC)&&(BOOST_GCC>=4*10000+6*100)
 #if !defined(BOOST_MULTI_INDEX_DETAIL_RESTORE_WSTRICT_ALIASING)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wstrict-aliasing"
+//#pragma GCC diagnostic ignored "-Wstrict-aliasing"
 #else
 #pragma GCC diagnostic pop
 #endif
diff --git a/inst/include/boost/ptr_container/detail/reversible_ptr_container.hpp b/inst/include/boost/ptr_container/detail/reversible_ptr_container.hpp
index 37cb9bb5..414cd48b 100644
--- a/inst/include/boost/ptr_container/detail/reversible_ptr_container.hpp
+++ b/inst/include/boost/ptr_container/detail/reversible_ptr_container.hpp
@@ -48,7 +48,7 @@
 
 #if defined(BOOST_PTR_CONTAINER_DISABLE_DEPRECATED)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/ptr_container/ptr_sequence_adapter.hpp b/inst/include/boost/ptr_container/ptr_sequence_adapter.hpp
index bb7a4d90..7e9266c9 100644
--- a/inst/include/boost/ptr_container/ptr_sequence_adapter.hpp
+++ b/inst/include/boost/ptr_container/ptr_sequence_adapter.hpp
@@ -27,7 +27,7 @@
 
 #if defined(BOOST_PTR_CONTAINER_DISABLE_DEPRECATED)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/ptr_container/ptr_vector.hpp b/inst/include/boost/ptr_container/ptr_vector.hpp
index 944580bc..6ed0345f 100644
--- a/inst/include/boost/ptr_container/ptr_vector.hpp
+++ b/inst/include/boost/ptr_container/ptr_vector.hpp
@@ -24,7 +24,7 @@
 
 #if defined(BOOST_PTR_CONTAINER_DISABLE_DEPRECATED)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/python/detail/wrap_python.hpp b/inst/include/boost/python/detail/wrap_python.hpp
index 13679dbb..67995f4d 100644
--- a/inst/include/boost/python/detail/wrap_python.hpp
+++ b/inst/include/boost/python/detail/wrap_python.hpp
@@ -166,7 +166,7 @@ typedef int pid_t;
 // Python.h header uses `register` keyword until Python 3.4
 #if BOOST_PYTHON_GCC_HAS_WREGISTER
 # pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wregister"
+//# pragma GCC diagnostic ignored "-Wregister"
 #elif defined(_MSC_VER)
 # pragma warning(push)
 # pragma warning(disable : 5033)  // 'register' is no longer a supported storage class
diff --git a/inst/include/boost/random/detail/disable_warnings.hpp b/inst/include/boost/random/detail/disable_warnings.hpp
index 4582dcb1..47c7b2e8 100644
--- a/inst/include/boost/random/detail/disable_warnings.hpp
+++ b/inst/include/boost/random/detail/disable_warnings.hpp
@@ -25,5 +25,5 @@
 
 #if defined(BOOST_GCC) && BOOST_GCC >= 40600
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wlogical-op"
+//#pragma GCC diagnostic ignored "-Wlogical-op"
 #endif
diff --git a/inst/include/boost/regex/v4/instances.hpp b/inst/include/boost/regex/v4/instances.hpp
index 0e423437..73288ae5 100644
--- a/inst/include/boost/regex/v4/instances.hpp
+++ b/inst/include/boost/regex/v4/instances.hpp
@@ -126,11 +126,11 @@ template class BOOST_REGEX_TEMPLATE_DECL ::boost::BOOST_REGEX_DETAIL_NS::perl_ma
 #  pragma clang diagnostic push
 #  if defined(__APPLE_CC__)
 #    if (__clang_major__ > 6)
-#      pragma clang diagnostic ignored "-Wkeyword-macro"
+  //#      pragma clang diagnostic ignored "-Wkeyword-macro"
 #    endif
 #  else
 #    if (__clang_major__ > 3) || ((__clang_major__ == 3) && (__clang_minor__ > 5))
-#      pragma clang diagnostic ignored "-Wkeyword-macro"
+  //#      pragma clang diagnostic ignored "-Wkeyword-macro"
 #    endif
 #  endif
 #endif
diff --git a/inst/include/boost/smart_ptr/bad_weak_ptr.hpp b/inst/include/boost/smart_ptr/bad_weak_ptr.hpp
index e3e81f9f..ee934c36 100644
--- a/inst/include/boost/smart_ptr/bad_weak_ptr.hpp
+++ b/inst/include/boost/smart_ptr/bad_weak_ptr.hpp
@@ -40,7 +40,7 @@ namespace boost
 #if defined(BOOST_CLANG)
 // Intel C++ on Mac defines __clang__ but doesn't support the pragma
 # pragma clang diagnostic push
-# pragma clang diagnostic ignored "-Wweak-vtables"
+  //# pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 
 class bad_weak_ptr: public std::exception
diff --git a/inst/include/boost/smart_ptr/detail/shared_count.hpp b/inst/include/boost/smart_ptr/detail/shared_count.hpp
index d56718fe..5aac2111 100644
--- a/inst/include/boost/smart_ptr/detail/shared_count.hpp
+++ b/inst/include/boost/smart_ptr/detail/shared_count.hpp
@@ -46,7 +46,7 @@
 
 #if defined( BOOST_SP_DISABLE_DEPRECATED )
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/smart_ptr/detail/sp_counted_base_clang.hpp b/inst/include/boost/smart_ptr/detail/sp_counted_base_clang.hpp
index 89bcfb80..a2b20e00 100644
--- a/inst/include/boost/smart_ptr/detail/sp_counted_base_clang.hpp
+++ b/inst/include/boost/smart_ptr/detail/sp_counted_base_clang.hpp
@@ -62,7 +62,7 @@ inline boost::int_least32_t atomic_conditional_increment( atomic_int_least32_t *
 
 #if defined(__clang__)
 # pragma clang diagnostic push
-# pragma clang diagnostic ignored "-Wweak-vtables"
+  //# pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 
 class BOOST_SYMBOL_VISIBLE sp_counted_base
diff --git a/inst/include/boost/smart_ptr/scoped_ptr.hpp b/inst/include/boost/smart_ptr/scoped_ptr.hpp
index 5325eba5..7b6a4a68 100644
--- a/inst/include/boost/smart_ptr/scoped_ptr.hpp
+++ b/inst/include/boost/smart_ptr/scoped_ptr.hpp
@@ -24,7 +24,7 @@
 
 #if defined( BOOST_SP_DISABLE_DEPRECATED )
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/smart_ptr/shared_ptr.hpp b/inst/include/boost/smart_ptr/shared_ptr.hpp
index 5ac02beb..19ab83dd 100644
--- a/inst/include/boost/smart_ptr/shared_ptr.hpp
+++ b/inst/include/boost/smart_ptr/shared_ptr.hpp
@@ -51,7 +51,7 @@
 
 #if defined( BOOST_SP_DISABLE_DEPRECATED )
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+//#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
 namespace boost
diff --git a/inst/include/boost/spirit/home/support/utree/operators.hpp b/inst/include/boost/spirit/home/support/utree/operators.hpp
index 1858ef4c..0b914527 100644
--- a/inst/include/boost/spirit/home/support/utree/operators.hpp
+++ b/inst/include/boost/spirit/home/support/utree/operators.hpp
@@ -537,7 +537,7 @@ namespace boost { namespace spirit
     BOOST_SPIRIT_UTREE_CREATE_INTEGRAL_FUNCTION(shift_right, a>>b)
 #if defined(__GNUC__) && (__GNUC__ >= 7)
 # pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wbool-operation" // '~' on an expression of type bool
+    //# pragma GCC diagnostic ignored "-Wbool-operation" // '~' on an expression of type bool
 #endif
     BOOST_SPIRIT_UTREE_CREATE_INTEGRAL_FUNCTION(invert, ~a)
 #if defined(__GNUC__) && (__GNUC__ >= 7)
diff --git a/inst/include/boost/system/detail/generic_category.hpp b/inst/include/boost/system/detail/generic_category.hpp
index 35175f8b..ad95468e 100644
--- a/inst/include/boost/system/detail/generic_category.hpp
+++ b/inst/include/boost/system/detail/generic_category.hpp
@@ -53,7 +53,7 @@ inline std::string generic_error_category_message( int ev )
 # elif defined(__clang__) && defined(__has_warning)
 #  pragma clang diagnostic push
 #  if __has_warning("-Wdeprecated-declarations")
-#   pragma clang diagnostic ignored "-Wdeprecated-declarations"
+  //#   pragma clang diagnostic ignored "-Wdeprecated-declarations"
 #  endif
 # endif
 
diff --git a/inst/include/boost/system/error_code.hpp b/inst/include/boost/system/error_code.hpp
index 9fb7de3b..5711b588 100644
--- a/inst/include/boost/system/error_code.hpp
+++ b/inst/include/boost/system/error_code.hpp
@@ -157,7 +157,7 @@ template<> struct is_error_condition_enum<errc::errc_t>
 // class error_category
 #if ( defined( BOOST_GCC ) && BOOST_GCC >= 40600 ) || defined( BOOST_CLANG )
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wnon-virtual-dtor"
+  //#pragma GCC diagnostic ignored "-Wnon-virtual-dtor"
 #endif
 
 #ifdef BOOST_MSVC
@@ -867,7 +867,7 @@ inline char const * error_category::message( int ev, char * buffer, std::size_t
 # elif defined(__clang__) && defined(__has_warning)
 #  pragma clang diagnostic push
 #  if __has_warning("-Wdeprecated-declarations")
-#   pragma clang diagnostic ignored "-Wdeprecated-declarations"
+        //#   pragma clang diagnostic ignored "-Wdeprecated-declarations"
 #  endif
 # endif
 
diff --git a/inst/include/boost/test/detail/suppress_warnings.hpp b/inst/include/boost/test/detail/suppress_warnings.hpp
index 4f8de3dd..51127ce2 100644
--- a/inst/include/boost/test/detail/suppress_warnings.hpp
+++ b/inst/include/boost/test/detail/suppress_warnings.hpp
@@ -28,13 +28,13 @@
 
 #if defined(BOOST_CLANG) && (BOOST_CLANG == 1)
 # pragma clang diagnostic push
-# pragma clang diagnostic ignored "-Wvariadic-macros"
-# pragma clang diagnostic ignored "-Wmissing-declarations"
+//# pragma clang diagnostic ignored "-Wvariadic-macros"
+//# pragma clang diagnostic ignored "-Wmissing-declarations"
 #endif
 
 #if defined(BOOST_GCC) && (BOOST_GCC >= 4 * 10000 + 6 * 100)
 # pragma GCC diagnostic push
-# pragma GCC diagnostic ignored "-Wvariadic-macros"
-# pragma GCC diagnostic ignored "-Wmissing-declarations"
+//# pragma GCC diagnostic ignored "-Wvariadic-macros"
+//# pragma GCC diagnostic ignored "-Wmissing-declarations"
 #endif
 
diff --git a/inst/include/boost/tuple/detail/tuple_basic.hpp b/inst/include/boost/tuple/detail/tuple_basic.hpp
index 879f0e90..fe11e3c3 100644
--- a/inst/include/boost/tuple/detail/tuple_basic.hpp
+++ b/inst/include/boost/tuple/detail/tuple_basic.hpp
@@ -43,7 +43,7 @@
 
 #if defined(BOOST_GCC) && (BOOST_GCC >= 40700)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
+//#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
 #endif
 
 namespace boost {
diff --git a/inst/include/boost/type_traits/detail/has_prefix_operator.hpp b/inst/include/boost/type_traits/detail/has_prefix_operator.hpp
index 77818c20..f423e391 100644
--- a/inst/include/boost/type_traits/detail/has_prefix_operator.hpp
+++ b/inst/include/boost/type_traits/detail/has_prefix_operator.hpp
@@ -20,7 +20,7 @@
 
 #ifdef BOOST_GCC
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated"
+//#pragma GCC diagnostic ignored "-Wdeprecated"
 #endif
 #if defined(BOOST_MSVC)
 #   pragma warning ( push )
diff --git a/inst/include/boost/type_traits/has_logical_not.hpp b/inst/include/boost/type_traits/has_logical_not.hpp
index d36858e1..9e0f7065 100644
--- a/inst/include/boost/type_traits/has_logical_not.hpp
+++ b/inst/include/boost/type_traits/has_logical_not.hpp
@@ -11,7 +11,7 @@
 
 #if defined(__GNUC__) && (__GNUC__*10000 + __GNUC_MINOR__*100 + __GNUC_PATCHLEVEL__ > 40800)
 #pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wunused-value"
+//#pragma GCC diagnostic ignored "-Wunused-value"
 #endif
 
 #define BOOST_TT_TRAIT_NAME has_logical_not
diff --git a/inst/include/boost/variant/get.hpp b/inst/include/boost/variant/get.hpp
index 0130bff3..fb44e2f5 100644
--- a/inst/include/boost/variant/get.hpp
+++ b/inst/include/boost/variant/get.hpp
@@ -32,7 +32,7 @@ namespace boost {
 
 #if defined(BOOST_CLANG)
 #   pragma clang diagnostic push
-#   pragma clang diagnostic ignored "-Wweak-vtables"
+  //#   pragma clang diagnostic ignored "-Wweak-vtables"
 #endif
 //////////////////////////////////////////////////////////////////////////
 // class bad_get
diff --git a/inst/include/boost/winapi/basic_types.hpp b/inst/include/boost/winapi/basic_types.hpp
index 1168054c..7515d24c 100644
--- a/inst/include/boost/winapi/basic_types.hpp
+++ b/inst/include/boost/winapi/basic_types.hpp
@@ -160,7 +160,7 @@ typedef ::LPCWSTR LPCWSTR_;
     && (__GNUC__ * 100 + __GNUC_MINOR__) >= 406
 #pragma GCC diagnostic push
 // ISO C++ 1998 does not support 'long long'
-#pragma GCC diagnostic ignored "-Wlong-long"
+//#pragma GCC diagnostic ignored "-Wlong-long"
 #endif
 
 typedef int BOOL_;
